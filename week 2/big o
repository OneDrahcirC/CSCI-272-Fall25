Big-O notation tells us how fast or slow a program runs when the data gets bigger. It doesnâ€™t give the exact time, just the general idea of how the program grows. This is important because some code may work fine with small data but become very slow with large data. For example, looking for a name in a class list is faster if the list is sorted instead of checking every name one by one. In our scenario, a vector was better than an array because it can grow and shrink easily, while an array has a fixed size.
